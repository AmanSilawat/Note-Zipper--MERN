{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/Header/Header.js","components/Footer/Footer.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/CreateNote/CreateNote.js","screens/SingleNote/SingleNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/UserReducers.js","reducers/notesReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","set_search","history","useHistory","useDispatch","user_info","useSelector","state","user_login","Navbar","bg","expand","variant","Container","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","Form","FormControl","placeholder","aria-label","onChange","e","target","value","style","maxHeight","navbarScroll","Link","href","NavDropdown","title","Item","Divider","onClick","removeItem","push","Footer","Row","Col","LandingPage","useEffect","getItem","Button","MainScreen","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","delete_note_action","getState","Authorization","token","delete","Loading","size","display","justifyContent","alignItems","width","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","note_list","loading","notes","error","console","log","filter","filtered_note","success_create","note_create","success","success_update","note_update","note_delete","loading_delete","error_delete","success_delete","get","filteredNote","toLowerCase","includes","reverse","map","note","Accordion","Card","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","RegisterScreen","useState","set_email","set_password","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","set_name","set_pic","confirm_password","set_confirm_password","set_message","picMessage","set_pic_message","user_register","File","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","post_details","files","label","custom","CreateNote","set_title","set_content","set_category","resetHandler","create_note_action","rows","Date","toLocaleDateString","SingleNote","match","date","set_date","params","updatedAt","fetching","put","update_note_action","ProfileScreen","location","pic_message","user_update","md","user","pics","varient","src","alt","App","exact","path","component","LoginScreen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","user_info_from_storage","parse","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bda01b26.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";","import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_LOGIN_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n            },\n        };\n\n        const { data } = await axios.post(\n            \"/api/users/login\",\n            { email, password },\n            config\n        );\n\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n        localStorage.setItem(\"user_info\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const logout = () => async (dispatch) => {\n    localStorage.removeItem(\"user_info\");\n    dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password, pic) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n            },\n        };\n\n        const { data } = await axios.post(\n            \"/api/users\",\n            { name, pic, email, password },\n            config\n        );\n\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n        localStorage.setItem(\"user_info\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const update_profile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_UPDATE_REQUEST });\n\n        const {\n            user_login: { user_info },\n        } = getState();\n\n        console.log('user_info', user_info)\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${user_info.token}`,\n            },\n        };\n\n        const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n        localStorage.setItem(\"user_info\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};","import React from 'react';\nimport { Container, Form, FormControl, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logout } from '../../actions/userActions';\n\nconst Header = ({ set_search }) => {\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const { user_info } = useSelector((state) => state.user_login);\n\n    const handler_logout = () => {\n        dispatch(logout())\n        history.push('/')\n    }\n    return (\n        <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand>\n                    <Link to=\"/\">Note Zipper</Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                <Navbar.Collapse id=\"navbarScroll\">\n                    <Nav className=\"m-auto\">\n                        <Form className=\"d-flex\">\n                            <FormControl\n                                type=\"search\"\n                                placeholder=\"Search\"\n                                className=\"mr-2\"\n                                aria-label=\"Search\"\n                                onChange={(e) => set_search(e.target.value)}\n                            />\n                        </Form>\n                    </Nav>\n                    <Nav\n                        className=\"my-2 my-lg-0\"\n                        style={{ maxHeight: '100px' }}\n                        navbarScroll\n                    >\n                        {user_info ? (\n                            <>\n                                <Nav.Link href=\"/mynotes\">My Notes</Nav.Link>\n                                <NavDropdown\n                                    title={`${user_info.name}`}\n                                    id=\"collasible-nav-dropdown\"\n                                >\n                                    <NavDropdown.Item href=\"/profile\">\n                                        My Profile\n                                    </NavDropdown.Item>\n\n                                    <NavDropdown.Divider />\n                                    <NavDropdown.Item onClick={handler_logout}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            </>\n                        ) : (\n                            <Nav.Link href=\"/login\">Login</Nav.Link>\n                        )}\n                        {/* <Nav.Link>\n                            <Link to=\"mynotes\">My Note</Link>\n                        </Nav.Link>\n                        <NavDropdown title={user_info?.name} id=\"\">\n                            <NavDropdown.Item href=\"#action3\">My Profile</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item onClick={handler_logout}>Logout</NavDropdown.Item>\n                        </NavDropdown> */}\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport './Footer.css'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">\n                        Copyright &copy; Note Zipper\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useEffect } from 'react';\nimport './LandingPage.css';\n\nimport { Button, Container, Row } from 'react-bootstrap';\n\nconst LandingPage = ({ history }) => {\n    useEffect(() => {\n        const user_info = localStorage.getItem('user_info');\n    \n        if (user_info) {\n            history.push('/mynotes')\n        }\n\n    }, [history])\n    return (\n        <div className=\"main\" >\n            <Container>\n                <Row>\n                    <div className=\"intro_text\">\n                        <div>\n                            <h1 className=\"title\">Welcome to Note Zipper</h1>\n                            <p className=\"subtitle\">One safe place for all your notes</p>\n                        </div>\n                        <div className=\"button_container\">\n                            <a href=\"/login\">\n                                <Button className=\"landing_button\">Login</Button>\n                            </a>\n                            <a href=\"/register\">\n                                <Button className=\"landing_button\" variant=\"outline-primary\" >Register</Button>\n                            </a>\n                        </div>\n                    </div>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default LandingPage\n","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport './MainScreen.css'\n\nconst MainScreen = ({ title, children }) => {\n    return (\n        <div>\n            <div className=\"mainback\">\n                <Container>\n                    <Row>\n                        <div className=\"page\">\n                            {\n                                title && (\n                                    <>\n                                        <h2 className=\"heading\">{title}</h2>\n                                        <hr />\n                                    </>\n                                )\n                            }\n                            {children}\n                        </div>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    )\n}\n\nexport default MainScreen\n","\nexport const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\nexport const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\nexport const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\n\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\n\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\n\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";","import {\n    NOTES_CREATE_FAIL,\n    NOTES_CREATE_REQUEST,\n    NOTES_CREATE_SUCCESS,\n    NOTES_DELETE_FAIL,\n    NOTES_DELETE_REQUEST,\n    NOTES_DELETE_SUCCESS,\n    NOTES_LIST_FAIL,\n    NOTES_LIST_REQUEST,\n    NOTES_LIST_SUCCESS,\n    NOTES_UPDATE_FAIL,\n    NOTES_UPDATE_REQUEST,\n    NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\nimport axios from \"axios\";\n\nexport const list_notes = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: NOTES_LIST_REQUEST,\n        });\n\n        const {\n            user_login: { user_info },\n        } = getState();\n\n\n        console.log('user_login', user_info)\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${user_info.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/notes`, config);\n\n        dispatch({\n            type: NOTES_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({\n            type: NOTES_LIST_FAIL,\n            payload: message,\n        });\n    }\n};\n\nexport const create_note_action = (title, content, category) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: NOTES_CREATE_REQUEST,\n        });\n\n        const {\n            user_login: { user_info },\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${user_info.token}`,\n            },\n        };\n\n        const { data } = await axios.post(\n            `/api/notes/create`,\n            { title, content, category },\n            config\n        );\n\n        dispatch({\n            type: NOTES_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({\n            type: NOTES_CREATE_FAIL,\n            payload: message,\n        });\n    }\n};\n\nexport const delete_note_action = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: NOTES_DELETE_REQUEST,\n        });\n\n        const {\n            user_login: { user_info },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${user_info.token}`,\n            },\n        };\n\n        const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n        dispatch({\n            type: NOTES_DELETE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({\n            type: NOTES_DELETE_FAIL,\n            payload: message,\n        });\n    }\n};\n\nexport const update_note_action = (id, title, content, category) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: NOTES_UPDATE_REQUEST,\n        });\n\n        const {\n            user_login: { user_info },\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${user_info.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/notes/${id}`,\n            { title, content, category },\n            config\n        );\n\n        dispatch({\n            type: NOTES_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message;\n        dispatch({\n            type: NOTES_UPDATE_FAIL,\n            payload: message,\n        });\n    }\n};","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loading({ size = 100 }) {\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"100%\",\n                height: \"100%\",\n            }}\n        >\n            <Spinner\n                style={{\n                    width: size,\n                    height: size,\n                }}\n                animation=\"border\"\n            />\n        </div>\n    );\n}\n\nexport default Loading;","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n    return (\n        <Alert variant={variant} style={{ fontSize: 20 }}>\n            <strong>{children}</strong>\n        </Alert>\n    );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport MainScreen from './../../components/MainScreen';\nimport './MyNotes.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { delete_note_action, list_notes } from '../../actions/notesActions';\nimport Loading from './../../components/Loading'\nimport ErrorMessage from './../../components/ErrorMessage';\n\nconst MyNotes = ({ search }) => {\n    const dispatch = useDispatch();\n    const note_list = useSelector(state => state.note_list);\n    const user_login = useSelector(state => state.user_login);\n    const history = useHistory()\n\n    const { loading, notes, error } = note_list;\n    const { user_info } = user_login;\n\n    console.log('notes', notes)\n\n    if (notes) {\n        notes\n            .filter((filtered_note) => {\n                console.log(filtered_note.title, search)\n\n            })\n\n    }\n\n\n    const note_create = useSelector((state) => state.note_create);\n    const { success: success_create } = note_create;\n\n    const note_update = useSelector((state) => state.note_update);\n    const { success: success_update } = note_update;\n\n    const note_delete = useSelector((state) => state.note_delete);\n    const {\n        loading: loading_delete,\n        error: error_delete,\n        success: success_delete,\n    } = note_delete;\n\n    const handler_delete = (id) => {\n        console.log('delete operation');\n        if (window.confirm(\"Are you sure?\")) {\n            dispatch(delete_note_action(id));\n        }\n    }\n\n    useEffect(() => {\n        dispatch(list_notes());\n\n        if (!user_info) {\n            history.push('/');\n        }\n    }, [dispatch, success_create, history, user_info, success_update, success_delete])\n\n    return (\n        <MainScreen title={`Welcome back ${user_info.name}`}>\n            <Link to='createnote'>\n                <Button className=\"createnote_btn\">Create New Note</Button>\n            </Link>\n\n            {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\n            {loading && <Loading />}\n\n            {error_delete && (\n                <ErrorMessage variant=\"danger\">{error_delete}</ErrorMessage>\n            )}\n            {loading_delete && <Loading />}\n            {\n                notes &&\n                notes\n                    .filter((filteredNote) =>\n                        filteredNote.title.toLowerCase().includes(search.toLowerCase())\n                    )\n                    .reverse()\n                    .map((note) => (\n                        <Accordion key={note._id}>\n                            <Card>\n                                <Card.Header className='card_header'>\n                                    <span className='card_title'>\n                                        <Accordion.Toggle as={Card.Text} variant=\"link\" eventKey=\"0\">\n                                            {note.title}\n                                        </Accordion.Toggle>\n                                    </span>\n                                    <div>\n                                        <Button href={`/note/${note._id}`}>Edit</Button>\n                                        <Button variant=\"danger\" className=\"mx-2\" onClick={() => handler_delete(note._id)}>Delete</Button>\n                                    </div>\n                                </Card.Header>\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <Card.Body>\n                                        <h4>\n                                            <Badge variant=\"success\">\n                                                Category - {note.category}\n                                            </Badge>\n                                        </h4>\n                                        <blockquote className=\"blockquote mb-0\">\n                                            <p>\n                                                {note.content}\n                                            </p>\n                                            <footer className=\"blockquote-footer\">\n                                                Created on{' '}\n                                                <cite title=\"Source Title\">\n                                                    {note.createdAt.substring(1, 10)}\n                                                </cite>\n                                            </footer>\n                                        </blockquote>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    ))\n            }\n        </MainScreen>\n    )\n}\n\nexport default MyNotes\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\nimport axios from 'axios';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../actions/userActions\";\n\nconst RegisterScreen = ({ history }) => {\n    const [email, set_email] = useState(\"\");\n    const [password, set_password] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const user_login = useSelector((state) => state.user_login)\n\n    const { loading, error, user_info } = user_login;\n\n    useEffect(() => {\n        if (user_info) {\n            history.push('/mynotes');\n        }\n    }, [history, user_info])\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    };\n\n    return (\n        <MainScreen title=\"LOGIN\">\n            <div className=\"loginContainer\">\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n                {loading && <Loading />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            value={email}\n                            placeholder=\"Enter email\"\n                            onChange={(e) => set_email(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={password}\n                            placeholder=\"Password\"\n                            onChange={(e) => set_password(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n                <Row className=\"py-3\">\n                    <Col>\n                        New Customer ? <Link to=\"/register\">Register Here</Link>\n                    </Col>\n                </Row>\n            </div>\n        </MainScreen>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./RegisterScreen.css\";\nimport axios from 'axios';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../../actions/userActions\";\n\nfunction RegisterScreen({ history}) {\n    const [email, set_email] = useState(\"\");\n    const [name, set_name] = useState(\"\");\n    const [pic, set_pic] = useState(\n        \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    );\n    const [password, set_password] = useState(\"\");\n    const [confirm_password, set_confirm_password] = useState(\"\");\n    const [message, set_message] = useState(null);\n    const [picMessage, set_pic_message] = useState(null);\n\n    const post_details = (pic) => {\n        if (\n            pic ===\n            \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n        ) {\n            return set_pic_message(\"Please Select an Image\");\n        }\n\n        set_pic_message(null);\n        if (pic.type === \"image/jpeg\" || pic.type === \"image/png\") {\n            const data = new FormData();\n            data.append(\"file\", pic);\n            data.append(\"upload_preset\", \"notezipper\");\n            data.append(\"cloud_name\", \"dvldkptxh\");\n            fetch(\"https://api.cloudinary.com/v1_1/dvldkptxh/image/upload\", {\n                method: \"post\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    set_pic(data.url.toString());\n                    console.log(data);\n                    console.log(data.url.toString());\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            return set_pic_message(\"Please Select an Image\");\n        }\n    };\n\n    const dispatch = useDispatch();\n\n    const user_register = useSelector(state => state.user_register);\n    const { loading, error, user_info } = user_register;\n\n\n    useEffect(() => {\n        if (user_info) {\n            history.push('/mynotes')\n        }\n    }, [history, user_info])\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        if (password !== confirm_password) {\n            set_message('Password do not match');\n        } else {\n            dispatch(register(name, email, password, pic))\n        }\n        \n    };\n\n    return (\n        <MainScreen title=\"REGISTER\">\n            <div className=\"loginContainer\">\n                {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n                {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n                {loading && <Loading />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type=\"name\"\n                            value={name}\n                            placeholder=\"Enter name\"\n                            onChange={(e) => set_name(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            value={email}\n                            placeholder=\"Enter email\"\n                            onChange={(e) => set_email(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={password}\n                            placeholder=\"Password\"\n                            onChange={(e) => set_password(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"confirm_Password\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={confirm_password}\n                            placeholder=\"Confirm Password\"\n                            onChange={(e) => set_confirm_password(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    {picMessage && (\n                        <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n                    )}\n                    <Form.Group controlId=\"pic\">\n                        <Form.Label>Profile Picture</Form.Label>\n                        <Form.File\n                            onChange={(e) => post_details(e.target.files[0])}\n                            id=\"custom-file\"\n                            type=\"image/png\"\n                            label=\"Upload Profile Picture\"\n                            custom\n                        />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Register\n                    </Button>\n                </Form>\n                <Row className=\"py-3\">\n                    <Col>\n                        Have an Account ? <Link to=\"/login\">Login</Link>\n                    </Col>\n                </Row>\n            </div>\n        </MainScreen>\n    );\n}\n\nexport default RegisterScreen;","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { create_note_action } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateNote({ history }) {\n    const [title, set_title] = useState(\"\");\n    const [content, set_content] = useState(\"\");\n    const [category, set_category] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const note_create = useSelector((state) => state.note_create);\n    const { loading, error, note } = note_create;\n\n    console.log(note);\n\n    const resetHandler = () => {\n        set_title(\"\");\n        set_category(\"\");\n        set_content(\"\");\n    };\n\n    const submit_handler = (e) => {\n        e.preventDefault();\n        dispatch(create_note_action(title, content, category));\n        if (!title || !content || !category) return;\n\n        resetHandler();\n        history.push(\"/mynotes\");\n    };\n\n    useEffect(() => { }, []);\n\n    return (\n        <MainScreen title=\"Create a Note\">\n            <Card>\n                <Card.Header>Create a new Note</Card.Header>\n                <Card.Body>\n                    <Form onSubmit={submit_handler}>\n                        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n                        <Form.Group controlId=\"title\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={title}\n                                placeholder=\"Enter the title\"\n                                onChange={(e) => set_title(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"content\">\n                            <Form.Label>Content</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                value={content}\n                                placeholder=\"Enter the content\"\n                                rows={4}\n                                onChange={(e) => set_content(e.target.value)}\n                            />\n                        </Form.Group>\n                        {content && (\n                            <Card>\n                                <Card.Header>Note Preview</Card.Header>\n                                <Card.Body>\n                                    <ReactMarkdown>{content}</ReactMarkdown>\n                                </Card.Body>\n                            </Card>\n                        )}\n\n                        <Form.Group controlId=\"content\">\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control\n                                type=\"content\"\n                                value={category}\n                                placeholder=\"Enter the Category\"\n                                onChange={(e) => set_category(e.target.value)}\n                            />\n                        </Form.Group>\n                        {loading && <Loading size={50} />}\n                        <Button type=\"submit\" variant=\"primary\">\n                            Create Note\n                        </Button>\n                        <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n                            Reset Feilds\n                        </Button>\n                    </Form>\n                </Card.Body>\n\n                <Card.Footer className=\"text-muted\">\n                    Creating on - {new Date().toLocaleDateString()}\n                </Card.Footer>\n            </Card>\n        </MainScreen>\n    );\n}\n\nexport default CreateNote;","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { delete_note_action, update_note_action } from \"../../actions/notesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleNote({ match, history }) {\n    const [title, set_title] = useState();\n    const [content, set_content] = useState();\n    const [category, set_category] = useState();\n    const [date, set_date] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const note_update = useSelector((state) => state.note_update);\n    const { loading, error } = note_update;\n\n    const note_delete = useSelector((state) => state.note_delete);\n    const { loading: loading_delete, error: error_delete } = note_delete;\n\n    const deleteHandler = (id) => {\n        if (window.confirm(\"Are you sure?\")) {\n            dispatch(delete_note_action(id));\n        }\n        history.push(\"/mynotes\");\n    };\n\n    useEffect(() => {\n        const fetching = async () => {\n            const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n            set_title(data.title);\n            set_content(data.content);\n            set_category(data.category);\n            set_date(data.updatedAt);\n        };\n\n        fetching();\n    }, [match.params.id, date]);\n\n    const reset_handler = () => {\n        set_title(\"\");\n        set_category(\"\");\n        set_content(\"\");\n    };\n\n    const update_handler = (e) => {\n        e.preventDefault();\n        dispatch(update_note_action(match.params.id, title, content, category));\n        if (!title || !content || !category) return;\n\n        reset_handler();\n        history.push(\"/mynotes\");\n    };\n\n    return (\n        <MainScreen title=\"Edit Note\">\n            <Card>\n                <Card.Header>Edit your Note</Card.Header>\n                <Card.Body>\n                    <Form onSubmit={update_handler}>\n                        {loading_delete && <Loading />}\n                        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n                        {error_delete && (\n                            <ErrorMessage variant=\"danger\">{error_delete}</ErrorMessage>\n                        )}\n                        <Form.Group controlId=\"title\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control\n                                type=\"title\"\n                                placeholder=\"Enter the title\"\n                                value={title}\n                                onChange={(e) => set_title(e.target.value)}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"content\">\n                            <Form.Label>Content</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                placeholder=\"Enter the content\"\n                                rows={4}\n                                value={content}\n                                onChange={(e) => set_content(e.target.value)}\n                            />\n                        </Form.Group>\n                        {content && (\n                            <Card>\n                                <Card.Header>Note Preview</Card.Header>\n                                <Card.Body>\n                                    <ReactMarkdown>{content}</ReactMarkdown>\n                                </Card.Body>\n                            </Card>\n                        )}\n\n                        <Form.Group controlId=\"content\">\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control\n                                type=\"content\"\n                                placeholder=\"Enter the Category\"\n                                value={category}\n                                onChange={(e) => set_category(e.target.value)}\n                            />\n                        </Form.Group>\n                        {loading && <Loading size={50} />}\n                        <Button variant=\"primary\" type=\"submit\">\n                            Update Note\n                        </Button>\n                        <Button\n                            className=\"mx-2\"\n                            variant=\"danger\"\n                            onClick={() => deleteHandler(match.params.id)}\n                        >\n                            Delete Note\n                        </Button>\n                    </Form>\n                </Card.Body>\n\n                <Card.Footer className=\"text-muted\">\n                    Updated on - {date.substring(0, 10)}\n                </Card.Footer>\n            </Card>\n        </MainScreen>\n    );\n}\n\nexport default SingleNote;","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { update_profile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, set_name] = useState(\"\");\n    const [email, set_email] = useState(\"\");\n    const [pic, set_pic] = useState();\n    const [password, set_password] = useState(\"\");\n    const [confirm_password, set_confirm_password] = useState(\"\");\n    const [pic_message, set_pic_message] = useState();\n\n    const dispatch = useDispatch();\n\n    const user_login = useSelector((state) => state.user_login);\n    const { user_info } = user_login;\n\n    const user_update = useSelector((state) => state.user_update);\n    const { loading, error, success } = user_update;\n\n    useEffect(() => {\n        if (!user_info) {\n            history.push(\"/\");\n        } else {\n            set_name(user_info.name);\n            set_email(user_info.email);\n            set_pic(user_info.pic);\n        }\n    }, [history, user_info]);\n\n    const post_details = (pics) => {\n        set_pic_message(null);\n        if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n            const data = new FormData();\n            data.append(\"file\", pics);\n            data.append(\"upload_preset\", \"notezipper\");\n            data.append(\"cloud_name\", \"dvldkptxh\");\n            fetch(\"https://api.cloudinary.com/v1_1/dvldkptxh/image/upload\", {\n                method: \"post\",\n                body: data,\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    set_pic(data.url.toString());\n                    console.log(pic);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            return set_pic_message(\"Please Select an Image\");\n        }\n    };\n\n    const submit_handler = (e) => {\n        e.preventDefault();\n\n        if (password === confirm_password) {\n            dispatch(update_profile({ name, email, password, pic }));\n        }\n    };\n\n    return (\n        <MainScreen title=\"EDIT PROFILE\">\n            <div>\n                <Row className=\"profile_container\">\n                    <Col md={6}>\n                        <Form onSubmit={submit_handler}>\n                            {loading && <Loading />}\n                            {success && (\n                                <ErrorMessage variant=\"success\">\n                                    Updated Successfully\n                                </ErrorMessage>\n                            )}\n                            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter Name\"\n                                    value={name}\n                                    onChange={(e) => set_name(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type=\"email\"\n                                    placeholder=\"Enter Email\"\n                                    value={email}\n                                    onChange={(e) => set_email(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    placeholder=\"Enter Password\"\n                                    value={password}\n                                    onChange={(e) => set_password(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"confirm_password\">\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    placeholder=\"Confirm Password\"\n                                    value={confirm_password}\n                                    onChange={(e) => set_confirm_password(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>{\" \"}\n                            {pic_message && (\n                                <ErrorMessage variant=\"danger\">{pic_message}</ErrorMessage>\n                            )}\n                            <Form.Group controlId=\"pic\">\n                                <Form.Label>Change Profile Picture</Form.Label>\n                                <Form.File\n                                    onChange={(e) => post_details(e.target.files[0])}\n                                    id=\"custom-file\"\n                                    type=\"image/png\"\n                                    label=\"Upload Profile Picture\"\n                                    custom\n                                />\n                            </Form.Group>\n                            <Button type=\"submit\" varient=\"primary\">\n                                Update\n                            </Button>\n                        </Form>\n                    </Col>\n                    <Col\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <img src={pic} alt={name} className=\"profile_pic\" />\n                    </Col>\n                </Row>\n            </div>\n        </MainScreen>\n    );\n};\n\nexport default ProfileScreen;","import './App.css';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport LandingPage from './screens/LandingPage/LandingPage';\nimport MyNotes from './screens/MyNotes/MyNotes';\nimport LoginScreen from './screens/LoginScreen/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen'\nimport CreateNote from './screens/CreateNote/CreateNote';\nimport SingleNote from './screens/SingleNote/SingleNote';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\n\nfunction App() {\n  const [search, set_search] = useState('')\n  return (\n    <Router>\n      <Header set_search={set_search} />\n      <main>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/createnote\" component={CreateNote} />\n        <Route\n          path=\"/mynotes\"\n          component={({ history }) => (\n            <MyNotes search={search} history={history} />\n          )}\n        />\n        <Route path=\"/note/:id\" component={SingleNote} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { user_login_reducer, user_register_reducer, user_update_reducer } from './reducers/UserReducers';\nimport { notes_list_reducer, note_create_reducer, note_delete_reducer, note_update_reducer } from './reducers/notesReducers';\n\nconst reducer = combineReducers({\n    user_login: user_login_reducer,\n    user_register: user_register_reducer,\n    note_list: notes_list_reducer,\n    note_create: note_create_reducer,\n    note_update: note_update_reducer,\n    note_delete: note_delete_reducer,\n    user_update: user_update_reducer\n})\n\nconst user_info_from_storage = localStorage.getItem('user_info')\n    ? JSON.parse(localStorage.getItem(\"user_info\"))\n    : null\n\nconsole.log('user_info_from_storage', user_info_from_storage)\n\nconst initialState = {\n    user_login: {\n        user_info: user_info_from_storage\n    }\n};\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"./../constants/userConstants\"\n\nexport const user_login_reducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true,\n\n            }\n\n        case USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user_info: action.payload\n            }\n\n        case USER_LOGIN_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const user_register_reducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                ...state,\n                loading: true,\n\n            }\n\n        case USER_REGISTER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user_info: action.payload\n            }\n\n        case USER_REGISTER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const user_update_reducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return {\n                loading: true,\n\n            }\n\n        case USER_UPDATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                user_info: action.payload\n            }\n\n        case USER_UPDATE_FAIL:\n            return {\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}","import {\n    NOTES_UPDATE_REQUEST,\n    NOTES_UPDATE_SUCCESS,\n    NOTES_UPDATE_FAIL,\n    NOTES_CREATE_FAIL,\n    NOTES_CREATE_REQUEST,\n    NOTES_CREATE_SUCCESS,\n    NOTES_DELETE_FAIL,\n    NOTES_DELETE_REQUEST,\n    NOTES_DELETE_SUCCESS,\n    NOTES_LIST_FAIL,\n    NOTES_LIST_REQUEST,\n    NOTES_LIST_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const notes_list_reducer = (state = { notes: [] }, action) => {\n    switch (action.type) {\n        case NOTES_LIST_REQUEST:\n            return { loading: true };\n        \n        case NOTES_LIST_SUCCESS:\n            return { loading: false, notes: action.payload };\n        \n        case NOTES_LIST_FAIL:\n            return { loading: false, error: action.payload };\n\n        default:\n            return state;\n    }\n};\n\nexport const note_create_reducer = (state = {}, action) => {\n    switch (action.type) {\n        case NOTES_CREATE_REQUEST:\n            return { loading: true };\n        \n        case NOTES_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        \n        case NOTES_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n\n        default:\n            return state;\n    }\n};\n\nexport const note_delete_reducer = (state = {}, action) => {\n    switch (action.type) {\n        case NOTES_DELETE_REQUEST:\n            return { loading: true };\n        \n        case NOTES_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        \n        case NOTES_DELETE_FAIL:\n            return { loading: false, error: action.payload, success: false };\n\n        default:\n            return state;\n    }\n};\n\nexport const note_update_reducer = (state = {}, action) => {\n    switch (action.type) {\n        case NOTES_UPDATE_REQUEST:\n            return { loading: true };\n        \n        case NOTES_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        \n        case NOTES_UPDATE_FAIL:\n            return { loading: false, error: action.payload, success: false };\n\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}